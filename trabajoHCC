from manim import *

class video(Scene):
    def construct(self):
        #funci√≥n del ejercicio
        eq = MathTex("f(x)=ax^3+bx^2+cx+d").move_to(np.array([-5,3.2,0])).scale(0.7)
        ax=Axes(x_range=[-10,10,1],
                y_range=[-10,10,1],
                x_length=15,
                y_length=8,
                axis_config={"include_tip" : True})
        self.add(ax,eq)
        #funcion inicial
        curva = ax.plot(lambda x: x**3+3*x**2-2*x+1)
        t0 = ValueTracker(0)
        d0 = DecimalNumber(0)
        t1 = ValueTracker(0)
        d1 = DecimalNumber(0)
        t2 = ValueTracker(0)
        d2 = DecimalNumber(0)
        t3 = ValueTracker(0)
        d3 = DecimalNumber(0)
        # Actualizar d[i]
        d0.add_updater(lambda z: z.set_value(t0.get_value()))
        d1.add_updater(lambda z: z.set_value(t1.get_value()))
        d2.add_updater(lambda z: z.set_value(t2.get_value()))
        d3.add_updater(lambda z: z.set_value(t3.get_value()))
        #d[i].move_to(np.array([])) Si quiero que se vea en pantalla el valor de d[i]
        d0.move_to(np.array([-5,2.2,0])).set_color("red")
        d1.move_to(np.array([-5,1.2,0])).set_color("red")
        d2.move_to(np.array([-5,0.2,0])).set_color("red")
        d3.move_to(np.array([-5,-0.8,0])).set_color("red")
        ecuacion = MathTex("f(x)=","x^3+","x^2+","x+").scale(0.6)
        ecuacion.move_to(np.array([4,2.2,0]))
        ecuacion[0].shift(LEFT * 4.1)
        ecuacion[1].shift(LEFT * 3.5)
        ecuacion[2].shift(LEFT * 3)
        ecuacion[3].shift(LEFT * 2.5)
        d0.next_to(ecuacion[1], LEFT).scale(0.6)
        d1.next_to(ecuacion[2], LEFT).scale(0.6)
        d2.next_to(ecuacion[3], LEFT).scale(0.6)
        d3.next_to(ecuacion[3], RIGHT).scale(0.6)
        curva.add_updater(lambda z: z.become(ax.plot(lambda x: t0.get_value()*x**3+t1.get_value()*x**2-t2.get_value()*x+t3.get_value())))
        self.add(curva,d0,d1,d2,d3,ecuacion)
        self.play(Write(VGroup(ecuacion[0], d0, ecuacion[1], d1, ecuacion[2], d2, ecuacion[3], d3)))
        self.play(t0.animate.set_value(3),t1.animate.set_value(-3),t2.animate.set_value(-3),t3.animate.set_value(5), run_time=10)



        #self.play(ax.animate.shift(2 * LEFT))
        self.wait(10)